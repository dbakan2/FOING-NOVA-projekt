// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace API.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210113164445_AppBillFix")]
    partial class AppBillFix
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("API.Entities.AppBill", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AppUserid")
                        .HasColumnType("INTEGER");

                    b.Property<string>("billDate")
                        .IsRequired()
                        .HasColumnType("Date");

                    b.Property<string>("currencyDate")
                        .IsRequired()
                        .HasColumnType("Date");

                    b.Property<string>("description")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("partnerAdress")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("TEXT");

                    b.Property<string>("partnerCity")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("TEXT");

                    b.Property<string>("partnerName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("TEXT");

                    b.Property<int>("partnerZipCode")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("AppUserid");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("API.Entities.AppItem", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("VAT")
                        .HasColumnType("REAL");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<float>("nettoPrice")
                        .HasColumnType("REAL");

                    b.Property<float>("quantity")
                        .HasColumnType("REAL");

                    b.Property<float>("unitOfMeasure")
                        .HasColumnType("REAL");

                    b.HasKey("id");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("API.Entities.AppUser", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("companyAdress")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("TEXT");

                    b.Property<string>("companyCity")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("TEXT");

                    b.Property<string>("companyName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("TEXT");

                    b.Property<bool>("isMasterAdmin")
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("passwordHash")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("passwordSalt")
                        .HasColumnType("BLOB");

                    b.Property<string>("surname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<int>("zipCode")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AppBillAppItem", b =>
                {
                    b.Property<int>("Billsid")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Itemsid")
                        .HasColumnType("INTEGER");

                    b.HasKey("Billsid", "Itemsid");

                    b.HasIndex("Itemsid");

                    b.ToTable("AppBillAppItem");
                });

            modelBuilder.Entity("API.Entities.AppBill", b =>
                {
                    b.HasOne("API.Entities.AppUser", "AppUser")
                        .WithMany("Bills")
                        .HasForeignKey("AppUserid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("AppBillAppItem", b =>
                {
                    b.HasOne("API.Entities.AppBill", null)
                        .WithMany()
                        .HasForeignKey("Billsid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Entities.AppItem", null)
                        .WithMany()
                        .HasForeignKey("Itemsid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("API.Entities.AppUser", b =>
                {
                    b.Navigation("Bills");
                });
#pragma warning restore 612, 618
        }
    }
}
